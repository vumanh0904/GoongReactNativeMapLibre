<%
  const layers = locals.layers;
-%>
/* eslint-disable */
// DO NOT MODIFY
// THIS FILE IS AUTOGENERATED

import { isAndroid } from './index';

export const StyleTypes = {
  Constant: 'constant',
  Color: 'color',
  Transition: 'transition',
  Translation: 'translation',
  Function: 'function',
  Image: 'image',
  Enum: 'enum',
};

export function getStyleType(styleProp: keyof typeof styleExtras): string {
  if (!isAndroid() && styleExtras[styleProp]) {
    return styleExtras[styleProp].iosType;
  }

  if (styleMap[styleProp]) {
    return styleMap[styleProp];
  }

  throw new Error(`${styleProp} is not a valid MapLibre layer style`);
}

const styleMap = {
  <%_ for (let layer of layers) { _%>
  <%_ for (let prop of layer.properties) { _%>
  <%_ if (prop.name !== 'visibility') { _%>
  <%= prop.name %>: <%- jsStyleType(prop) %>,
  <%_ if (prop.transition) { _%>
  <%= prop.name %>Transition: StyleTypes.Transition,
  <%_ } _%>
  <%_ } _%>
  <%_ } _%>

  <%_ } _%>
  visibility: StyleTypes.Constant,
};

export const styleExtras = {
  // padding
  iconTextFitPadding: {
    iosType: 'edgeinsets',
  },

  // offsets
  iconOffset: {
    iosType: 'vector',
  },
  textOffset: {
    iosType: 'vector',
  },
  lineOffset: {
    iosType: 'vector',
  },

  // translates
  fillTranslate: {
    iosType: 'vector',
  },
  lineTranslate: {
    iosType: 'vector',
  },
  iconTranslate: {
    iosType: 'vector',
  },
  textTranslate: {
    iosType: 'vector',
  },
  circleTranslate: {
    iosType: 'vector',
  },
  fillExtrusionTranslate: {
    iosType: 'vector',
  },
};

export default styleMap;
